{"version":3,"sources":["ReceivedMessages.js","AcceptMessageButton.js","SecretMessage.js","Convo.js","logo.svg","Web3Helper.js","CustomerDetails.js","SendPublicMessage.js","StartConversationButton.js","PublicMessages.js","Messages.js","SendPrivateMessage.js","StartConversation.js","Conversations.js","NewSendMessage.js","Txtrs.js","App.js","registerServiceWorker.js","index.js","EncryptMessage.js"],"names":["window","db","rec_state","EC","require","ec","ReceivedMessages","props","_this","Object","_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","state","receivedMessages","errormessage","keys","message","undefined","getPrivateMessages","response","setState","setUpListeners","fetch","that","contract","events","allEvents","fromBlock","_ref","_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee3","err","data","wrap","_context3","prev","next","console","log","stop","_x","_x2","apply","arguments","methods","get_received_messages_total","users_address","messages_count","messages","index","get_received_message","private_message_addr","private_message","getPrivateMessage","stage","plaintext","alice","bob","bob_public","encrypted_message","pub_key_readable","Buffer","from","toString","ethPrivKey","localStorage","pub","slice","ecies","encrypt","pk","keyFromPrivate","decrypt","e","id","address","push","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","map","react_bootstrap_lib_Panel__WEBPACK_IMPORTED_MODULE_8___default","bsStyle","key","className","Heading","Title","componentClass","Body","style","backgroundColor","colorHash","hex","color","contrast","_AcceptMessageButton__WEBPACK_IMPORTED_MODULE_11__","account","_SecretMessage__WEBPACK_IMPORTED_MODULE_12__","React","Component","AcceptMessageButton","_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","private_message_bob_stage_2","react__WEBPACK_IMPORTED_MODULE_5___default","type","value","onClick","event","handleClick","Fragment","SecretMessage","Convo","_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","onSendSecretMessage","_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_callee","public_key","_context","preventDefault","w3","eth","getAccounts","sent","secret_message","alice_send_encrypted_message","send","gasPrice","abrupt","myChangeHandler","target","bind","_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","react__WEBPACK_IMPORTED_MODULE_9___default","react_bootstrap_lib_Panel__WEBPACK_IMPORTED_MODULE_10___default","module","exports","__webpack_require__","p","Web3","ethereum","Contract","abi","getContract","addr","abi_private_message","getSentMessages","_getSentMessages","get_sent_messages_total","get_sent_message","_private_message_bob_stage_","_callee2","privateKey","ephemPrivKey","ephemPubKey","accounts","_context2","utils","randomHex","getPublic","encode","setItem","enable","pm_bob_reply","colorHex","threshold","length","rgb","result","exec","r","parseInt","g","b","hexToRgb","web3init","_web3init","options","SendPublicMessage","classCallCheck","possibleConstructorReturn","getPrototypeOf","mySubmitHandler","asyncToGenerator","regenerator_default","send_public_message","nam","name","val","react_default","defineProperty","Panel_default","onSubmit","onChange","StartConversationButton","pm_init","PublicMessages","publicMessages","getPublicMessages","get_public_message_count","get_public_message_message","get_public_message_sender","sender","StartConversationButton_StartConversationButton","Messages","StartConversation","_ref2","_x3","sentMessages","show_once_alice","show_once_bob","Conversations","_this2","htmlFor","placeholder","StartConversation_StartConversation","NewSendMessage","_useState","useState","_useState2","slicedToArray","setMessages","_fetch","useEffect","then","EncryptMessage","Arts","networkname","net","getNetworkType","counter","href","src","SendPublicMessage_SendPublicMessage","PublicMessages_PublicMessages","Conversations_Conversations","Messages_Messages","App","BrowserRouter","basename","process","aria-label","width","height","viewBox","aria-hidden","d","fill","Route","exact","path","component","Txtrs","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","concat","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","pm_alice_send_encrypted_message","_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","react__WEBPACK_IMPORTED_MODULE_8___default","react_bootstrap_lib_Panel__WEBPACK_IMPORTED_MODULE_9___default","renderForm"],"mappings":"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","file":"static/js/main.ac7371ad.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from 'react-bootstrap/lib/Button'\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport ecies from 'eth-ecies'\r\nimport {getContract, contract, w3, users_address, getPrivateMessage, getBlockNumber, private_message_bob_stage_2} from \"./Web3Helper\"\r\nimport {colorHash, contrast} from \"./Web3Helper\"\r\nimport AcceptMessageButton from './AcceptMessageButton'\r\nimport SecretMessage from './SecretMessage'\r\n\r\n\r\n\r\n\r\n\r\nwindow.db = {}\r\nwindow.rec_state = {}\r\n\r\n\r\nconst EC = require(\"elliptic\").ec;\r\n\r\nexport default class ReceivedMessages extends React.Component {\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      receivedMessages: [],\r\n      errormessage: '',\r\n      keys:{},\r\n\t\t\tmessage:undefined\r\n    };\r\n\r\n  }\r\n  \r\n  async fetch(){\r\n    const response = await this.getPrivateMessages()\r\n    this.setState({receivedMessages: response})\r\n  }\r\n  async componentDidMount() {\r\n    await this.setUpListeners();\r\n    await this.fetch();\r\n    window.rec_state = this.state\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  async setUpListeners(){\r\n    var that = this;\r\n    contract.events.allEvents(\"allEvents\",{\r\n    \r\n        fromBlock: 'latest'\r\n\r\n    },async function(err,data){\r\n      console.log(\"event\", data);\r\n      await that.fetch();\r\n    });\r\n  }\r\n\r\n  async getPrivateMessages() {\r\n\r\n      //set up listeners for new received messages\r\n\r\n\r\n\r\n\r\n\r\n    var messages_count = await contract.methods.get_received_messages_total(users_address).call();\r\n    var messages = []\r\n    for(var index = messages_count-1; index >= 0 ;index-- ){\r\n      var private_message_addr = await contract.methods.get_received_message(users_address,index).call()\r\n\t\t\tvar private_message = getPrivateMessage(private_message_addr)\r\n\r\n\r\n\r\n\r\n\t\t\tvar stage = await private_message.methods.stage().call()\r\n      var plaintext=''\r\n\t\t\tvar alice = await private_message.methods.alice().call()\r\n\t\t\tvar bob = await private_message.methods.bob().call()\r\n\t\t\tvar bob_public = await private_message.methods.bob_public().call()\r\n      var encrypted_message = await private_message.methods.encrypted_message().call()\r\n\r\n      if (stage == \"1\"){\r\n        //private_message_bob_stage_2(private_message); // TODO remove\r\n      }\r\n      if(stage == \"3\"){\r\n        //decrypt using bob eey\r\n        const ec = new EC(\"secp256k1\");\r\n        var pub_key_readable = Buffer.from(bob_public,'hex').toString(\"hex\");\r\n        console.log('should be same kesy bob',bob_public, pub_key_readable)\r\n        var ethPrivKey = window.localStorage[pub_key_readable];\r\n        if(ethPrivKey){\r\n          //try to encrypt and then decrypt (?)\r\n          var pub = Buffer.from(pub_key_readable.slice(2),'hex');\r\n          var encrypt = ecies.encrypt(pub, 'test');\r\n          var pk = ec.keyFromPrivate(ethPrivKey)\r\n          try{\r\n          plaintext = ecies.decrypt(pk , Buffer.from(encrypted_message,'hex')).toString();// XXX REAL ONE\r\n          }catch (e){\r\n          console.log(e);\r\n          }\r\n\r\n          console.log('plaintext2',plaintext);\r\n        }\r\n\r\n      }\r\n\r\n    var message = {plaintext:plaintext,stage:stage,alice:alice,bob:bob, id:index, address: private_message_addr, encrypted_message:encrypted_message, bob_public:bob_public }\r\n      messages.push(message);\r\n\r\n      //var sender = await contract.methods.get_public_message_sender(index).call()\r\n    }\r\n    return messages;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n<div>\r\n        { \r\n\r\n\t\t\t\tthis.state.receivedMessages.map(message => \r\n          <Panel bsStyle=\"info\" key={message.id} className=\"centeralign\">\r\n            <Panel.Heading>\r\n              <Panel.Title componentClass=\"h3\">\r\n\t\t\t\t\t\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tswitch (message.stage) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase \"1\":   return \"Incoming Conversation request\";\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase \"2\": return \"Waiting on recieving encrypted message \";\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase \"3\":  return \"Encrypted Message received\" ;\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase \"4\":  return \"Encrypted Message received and status = Read\";\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:      return \"unknown stage \";\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})()}\r\n\t\t\t\t\t\t</Panel.Title>\r\n            </Panel.Heading>\r\n            <Panel.Body style={{backgroundColor:colorHash.hex(message.alice), color:contrast(colorHash.hex(message.alice))}}>\r\n            <p>\r\n        {(() => {\r\n          switch (message.stage) {\r\n            case \"1\": return \"incoming message request from \" + message.alice ;\r\n            case \"2\": return \"Waiting on an encrypted message from \" + message.alice;\r\n            case \"3\": return \"Secure message from \" + message.alice;\r\n            default: return message.alice;\r\n            }\r\n            })()}\r\n            </p>\r\n            <AcceptMessageButton account={message.address} stage={message.stage} />\r\n            <SecretMessage message={message} />\r\n            </Panel.Body>\r\n          </Panel>)\r\n        }\r\n</div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","\r\nimport React from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport {getContract, contract, w3, users_address, getPrivateMessage, private_message_bob_stage_2} from \"./Web3Helper\"\r\n\r\nimport ReactDOM from 'react-dom';\r\nconst ecies = require('eth-ecies')\r\n\r\nexport default class AcceptMessageButton extends React.Component {\r\n\tconstructor(props) {\r\n    super(props);\r\n  }\r\n  handleClick(props){\r\n\t\tprivate_message_bob_stage_2(props.account);\r\n  }\r\n  render(){\r\n  if (this.props.stage==1){\r\n    return (<div><p>{this.props.account}</p><input type=\"button\" style={{color:'black'}} value=\"Accept Conversation\" onClick={(event)=>this.handleClick(this.props)}/></div>)\r\n  }\r\n  else{\r\n    return (<></>)\r\n  }\r\n  }\r\n}\r\n","\r\nimport React from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport {getContract, contract, w3, users_address, getPrivateMessage, private_message_bob_stage_2} from \"./Web3Helper\"\r\n\r\nimport ReactDOM from 'react-dom';\r\nconst ecies = require('eth-ecies')\r\n\r\nexport default class SecretMessage extends React.Component {\r\n\tconstructor(props) {\r\n    super(props);\r\n  }\r\n  render(){\r\n  if (this.props.message.stage==3){\r\n    return ( <div><p>{this.props.message.plaintext}</p></div>);\r\n  }\r\n  else{\r\n    return (<></>)\r\n  }\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport {getContract, contract, w3, users_address, getPrivateMessage, colorHash, contrast} from \"./Web3Helper\"\r\n\r\nimport ReactDOM from 'react-dom';\r\nconst ecies = require('eth-ecies')\r\n\r\nexport default class Convo extends React.Component {\r\n\tconstructor(props) {\r\n    super(props);\r\n    console.log(\"PROPS\",props);\r\n    this.state = {\r\n      message: props.message,\r\n      errormessage: props.message\r\n    };\r\n    this.onSendSecretMessage = this.onSendSecretMessage.bind(this);\r\n\r\n  }\r\n  async componentDidMount() {\r\n  }\r\n  onSendSecretMessage = async (event) => {\r\n    event.preventDefault();\r\n    var private_message = getPrivateMessage(this.state.message.address)\r\n    // the damn library adds the \"0x04\" prevailing byte so we need to slice(2) the hex rep\r\n    //https://github.com/libertylocked/eth-ecies/blob/master/index.js#L74\r\n    var bob_public = this.state.message.bob_public;\r\n    var public_key = Buffer.from( bob_public.slice(2),'hex');\r\n    var account = await  w3.eth.getAccounts()\r\n    var encrypt = ecies.encrypt(public_key, this.state.secret_message);\r\n    var send = await private_message.methods.alice_send_encrypted_message(encrypt.toString('hex')).send({gasPrice:0,from:account[0]});\r\n    return false;\r\n  }\r\n\r\n  myChangeHandler = (event) => {\r\n    this.setState({secret_message: event.target.value});\r\n\r\n    return;\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    let err = '';\r\n    if (nam === \"message\") {\r\n      if (val ==\"\" ) {\r\n        err = <strong>Your message can't be blank</strong>;\r\n      }\r\n    }\r\n    this.setState({errormessage: err});\r\n    this.setState({[nam]: val});\r\n  }\r\n  render() {\r\n            var message = this.state.message;\r\n            return(\r\n<Panel bsStyle=\"info\" key={message.id} className=\"centeralign\">\r\n            <Panel.Heading>\r\n              <Panel.Title componentClass=\"h3\">\r\n\t\t\t\t\t\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tswitch (message.stage) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase \"1\":   return \"Key request sent.\";\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase \"2\": return \"Recipient has shared one time use encryption keys with you. Time to encrypt and send the message!\";\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase \"3\":  return \"Conversation #\"+message.id\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase \"4\":  return \"Encrypted Message received by \"+message.bob;\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:      return \"unknown stage \";\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})()}\r\n\t\t\t\t\t\t</Panel.Title>\r\n            </Panel.Heading>\r\n            <Panel.Body style={{backgroundColor:colorHash.hex(message.bob), color:contrast(colorHash.hex(message.bob))}}>\r\n            \r\n            <div>\r\n                  <p>\r\n                    conversation wtih\r\n                  </p>\r\n                  <p>\r\n                    {message.bob}\r\n                  </p>\r\n                  <p>\r\n                    {message.id} total messages\r\n                  </p>\r\n\r\n            </div>\r\n\r\n\r\n            </Panel.Body>\r\n          </Panel>\r\n          )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import Web3 from 'web3'\r\n\r\n\r\nimport abi from './abi_txtrs.json'\r\nimport abi_private_message from './abi_private_message.json'\r\n\r\nconst EC = require(\"elliptic\").ec;\r\nconst ec = new EC(\"secp256k1\");\r\nexport var w3 = new Web3(window.ethereum);\r\nvar contract_address = \"0x6954fd4298F36FE38f254CF6789ebF755bb0035E\";\r\nvar contract_address = \"0xB43Fd3ba31365E15A35f428C6E2D62bE07275eCC\"\r\nexport var users_address;\r\n\r\nwindow.w3 = w3;\r\n\r\nexport const contract = new w3.eth.Contract(abi, contract_address);\r\n\r\nexport function getContract() {\r\n  return contract;\r\n}\r\nexport function getPrivateMessage(addr) {\r\n  const w3 = new Web3(window.ethereum);\r\n  return new w3.eth.Contract(abi_private_message, addr);\r\n}\r\nexport function getBlockNumber(addr) {\r\n  return new w3.eth.getBlockNumber();\r\n}\r\n\r\nexport async function getSentMessages() {\r\n  var account = await w3.eth.getAccounts()\r\n  var messages_count = await contract.methods.get_sent_messages_total(users_address).call();\r\n  var messages = []\r\n  for (var index = messages_count - 1; index >= 0; index--) {\r\n    var private_message_addr = await contract.methods.get_sent_message(users_address, index).call()\r\n    var private_message = getPrivateMessage(private_message_addr)\r\n    var alice = await private_message.methods.alice().call()\r\n    var bob = await private_message.methods.bob().call()\r\n    var stage = await private_message.methods.stage().call()\r\n    var message = { stage: stage, alice: alice, bob: bob, id: index }\r\n\r\n    if (stage == 1) {\r\n    }\r\n    if (stage == \"2\") {\r\n      var bob_public = await private_message.methods.bob_public().call()\r\n      message['bob_public'] = bob_public\r\n    }\r\n    message['address'] = private_message_addr\r\n    message['id'] = index;\r\n    messages.push(message);\r\n  }\r\n  console.log(\"Messages\", messages)\r\n  return messages;\r\n};\r\n\r\n\r\nexport async function private_message_bob_stage_2(private_message_addr) {\r\n\r\n  var privateKey = w3.utils.randomHex(32)\r\n  const ec = new EC(\"secp256k1\");\r\n  const ephemPrivKey = ec.keyFromPrivate(privateKey);\r\n  const ephemPubKey = ephemPrivKey.getPublic();\r\n  const ephemPubKeyEncoded = Buffer.from(ephemPubKey.encode());\r\n  const pub_key_readable = Buffer.from(ephemPubKey.encode()).toString('hex')\r\n\r\n\r\n  window.db[pub_key_readable] = privateKey\r\n  window.localStorage.setItem(pub_key_readable, privateKey);\r\n\r\n\r\n  var accounts = await w3.eth.getAccounts()\r\n  await window.ethereum.enable()\r\n  var send = await contract.methods.pm_bob_reply(private_message_addr, pub_key_readable).send({ gasPrice: 0, from: accounts[0] })\r\n\r\n}\r\nfunction hexToRgb(hex) {\r\n  if (!hex || hex === undefined || hex === '') {\r\n    return undefined;\r\n  }\r\n\r\n  const result =\r\n    /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n  return result ? {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16)\r\n  } : undefined;\r\n}\r\nfunction rgbToYIQ({ r, g, b }) {\r\n  return ((r * 299) + (g * 587) + (b * 114)) / 1000;\r\n}\r\n\r\nexport function contrast(colorHex: string | undefined,\r\n  threshold: number = 128): string {\r\n  if (colorHex === undefined) {\r\n    return '#000';\r\n  }\r\n\r\n  const rgb: RGB | undefined = hexToRgb(colorHex);\r\n\r\n  if (rgb === undefined) {\r\n    return '#000';\r\n  }\r\n\r\n  return rgbToYIQ(rgb) >= threshold ? '#000' : '#fff';\r\n}\r\n\r\nvar ColorHash = require('color-hash');\r\nexport var colorHash = new ColorHash();\r\n\r\nexport async function web3init() {\r\n  if (!window.ethereum) {\r\n    return false;\r\n  }\r\n  await window.ethereum.enable();//'https://rpc.goerli.mudit.blog/');\r\n  var account = await w3.eth.getAccounts()\r\n  contract.options.from = account[0]\r\n  users_address = account[0];\r\n  return true;\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport axios from 'axios'\r\n\r\n//This Component is a child Component of Customers Component\r\nexport default class CustomerDetails extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {}\r\n  }\r\n\r\n  //Function which is called when the component loads for the first time\r\n  componentDidMount() {\r\n    this.getCustomerDetails(this.props.val)\r\n  }\r\n\r\n  //Function which is called whenver the component is updated\r\n  componentDidUpdate(prevProps) {\r\n\r\n    //get Customer Details only if props has changed\r\n    if (this.props.val !== prevProps.val) {\r\n      this.getCustomerDetails(this.props.val)\r\n    }\r\n  }\r\n\r\n  //Function to Load the customerdetails data from json.\r\n  getCustomerDetails(id) {\r\n    axios.get('assets/samplejson/customer' + id + '.json').then(response => {\r\n      this.setState({customerDetails: response})\r\n    })\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.customerDetails)\r\n      return (<p>Loading Data</p>)\r\n    return (<div className=\"customerdetails\">\r\n      <Panel bsStyle=\"info\" className=\"centeralign\">\r\n        <Panel.Heading>\r\n          <Panel.Title componentClass=\"h3\">{this.state.customerDetails.data.name}</Panel.Title>\r\n        </Panel.Heading>\r\n        <Panel.Body>\r\n          <p>Name : {this.state.customerDetails.data.name}</p>\r\n          <p>Email : {this.state.customerDetails.data.email}</p>\r\n          <p>Phone : {this.state.customerDetails.data.phone}</p>\r\n          <p>City : {this.state.customerDetails.data.city}</p>\r\n          <p>State : {this.state.customerDetails.data.state}</p>\r\n          <p>Country : {this.state.customerDetails.data.country}</p>\r\n          <p>Organization : {this.state.customerDetails.data.organization}</p>\r\n          <p>Job Profile : {this.state.customerDetails.data.jobProfile}</p>\r\n          <p>Additional Info : {this.state.customerDetails.data.additionalInfo}</p>\r\n        </Panel.Body>\r\n      </Panel>\r\n    </div>)\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\n\r\nimport {getContract, contract, w3, colorHash, contrast} from \"./Web3Helper\"\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport default class SendPublicMessage extends React.Component {\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: '',\r\n      errormessage: '',\r\n      account:''\r\n    };\r\n  }\r\n  async componentDidMount(){\r\n    var account = await  w3.eth.getAccounts()\r\n    this.setState({account:account})\r\n  }\r\n  mySubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    var account = await  w3.eth.getAccounts()\r\n\r\n    var send = await contract.methods.send_public_message(this.state.message).send();//, {from:account}).send({from:account, value:0})\r\n    return false;\r\n  }\r\n\r\n  myChangeHandler = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    let err = '';\r\n    if (nam === \"message\") {\r\n      if (val ==\"\" ) {\r\n        err = <strong>Your message can't be blank</strong>;\r\n      }\r\n    }\r\n    this.setState({errormessage: err});\r\n    this.setState({[nam]: val});\r\n  }\r\n  render() {\r\n    return (\r\n          <Panel bsStyle=\"info\" className=\"centeralign\">\r\n            <Panel.Heading>\r\n              <Panel.Title componentClass=\"h3\">\r\n              Send Public Message\r\n\r\n\t\t\t\t\t\t</Panel.Title>\r\n            </Panel.Heading>\r\n            <Panel.Body style={{backgroundColor:colorHash.hex(this.state.account)}} >\r\n              <form onSubmit={this.mySubmitHandler}>\r\n              <input\r\n                type='text'\r\n                name='message'\r\n                onChange={this.myChangeHandler}\r\n              />\r\n              <input\r\n                type='submit'\r\n                value='Share'\r\n              />\r\n         \r\n              {this.state.errormessage}\r\n              </form>\r\n            </Panel.Body>\r\n          </Panel>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n","\r\nimport React from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport {getContract, contract, w3, users_address, getPrivateMessage, private_message_bob_stage_2} from \"./Web3Helper\"\r\n\r\nimport ReactDOM from 'react-dom';\r\nconst ecies = require('eth-ecies')\r\n\r\nexport default class StartConversationButton extends React.Component {\r\n\tconstructor(props) {\r\n    super(props);\r\n  }\r\n  async handleClick(props){\r\n\r\n    var account = await  w3.eth.getAccounts()\r\n    var send = await contract.methods.pm_init(this.props.address).send({gasPrice:0,from:account[0]});\r\n    return false;\r\n  }\r\n  render(){\r\n      return (<div>\r\n        <p>{this.props.account}</p>\r\n        <input type=\"button\" value=\"Start a secret conversation\" onClick={(event)=>this.handleClick(this.props)}/>\r\n      </div>)\r\n  }\r\n\r\n\r\n}\r\n","import React from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport ecies from 'eth-ecies'\r\n\r\n//import {getContract, contract, w3, users_address, getPrivateMessage, getBlockNumber} from \"./Web3Helper\"\r\nimport StartConversationButton from './StartConversationButton'\r\n\r\n\r\nimport {w3,getContract, contract, web3init, getBlockNumber, colorHash, contrast} from \"./Web3Helper\"\r\n\r\nconst blendstyle = {\r\n            color:'white'\r\n}\r\n\r\nexport default class PublicMessages extends React.Component {\r\n  \r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      publicMessages:{\r\n        data: []\r\n      },\r\n      account:''\r\n    };\r\n  }\r\n  \r\n  async setUpListeners(){\r\n    var that = this;\r\n    contract.events.allEvents(\"allEvents\",{\r\n    \r\n        fromBlock: 'latest'\r\n\r\n    },async function(err,data){\r\n      console.log(\"event\", data);\r\n      await that.fetch();\r\n    });\r\n  }\r\n\r\n\r\n  async fetch(){\r\n    var account = await  w3.eth.getAccounts()\r\n    const response = await this.getPublicMessages()\r\n    this.setState({publicMessages: {\"data\":response}, account:account})\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.fetch()\r\n    await this.setUpListeners();\r\n  }\r\n\r\n  async getPublicMessages() {\r\n    var messages_count = await contract.methods.get_public_message_count().call();\r\n    var messages = []\r\n    for(var index = messages_count-1; index >= 0 ;index-- ){\r\n      var message = await contract.methods.get_public_message_message(index).call()\r\n      var sender = await contract.methods.get_public_message_sender(index).call()\r\n      messages.push({message:message, sender:sender, id:index})\r\n    }\r\n    return messages;\r\n  };\r\n\r\n\r\n  render(){\r\n          const elements = ['a','b','c'];\r\n        return (\r\n          <div>\r\n          {\r\n          this.state.publicMessages.data.map((message,index) => <Panel bsStyle=\"info\" key={message.id} className=\"centeralign\">\r\n            <Panel.Heading>\r\n              <Panel.Title componentClass=\"h3\">{message.sender}</Panel.Title>\r\n            </Panel.Heading>\r\n            <Panel.Body style={{backgroundColor:colorHash.hex(message.sender)}}>\r\n              <p style={{color:contrast(colorHash.hex(message.sender))}}>\r\n              {message.message}</p>\r\n              <div> <StartConversationButton  address={message.sender}/></div>\r\n            </Panel.Body>\r\n          </Panel>)\r\n        \r\n          }\r\n        </div>\r\n        )\r\n\r\n\r\n  }\r\n  }\r\n","import React from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport {getContract, contract, w3, users_address, getPrivateMessage, getBlockNumber} from \"./Web3Helper\"\r\nimport EncryptMessage from './EncryptMessage'\r\n\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nexport default class Messages extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n    <div><h2>Active Conversations</h2></div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport {getContract, contract, w3, users_address, getPrivateMessage, getBlockNumber} from \"./Web3Helper\"\r\nimport EncryptMessage from './EncryptMessage'\r\n\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport default class SendPublicMessage extends React.Component {\r\n  async setUpListeners(){\r\n    var that = this;\r\n    contract.events.allEvents(\"allEvents\",{\r\n    \r\n        fromBlock: 'latest'\r\n\r\n    },async function(err,data){\r\n      await that.getSentMessages();\r\n    });\r\n  }\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: '',\r\n      sentMessages : [],\r\n      errormessage: '',\r\n      account:''\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    await this.setUpListeners();\r\n    const response = await this.getSentMessages()\r\n  }\r\n  async getSentMessages() {\r\n    var account = await  w3.eth.getAccounts()\r\n    this.state.account = account;\r\n    var messages_count = await contract.methods.get_sent_messages_total(users_address).call();\r\n    var messages = []\r\n    for(var index = messages_count-1; index >= 0 ;index-- ){\r\n      var private_message_addr = await contract.methods.get_sent_message(users_address,index).call()\r\n\t\t\tvar private_message = getPrivateMessage(private_message_addr)\r\n\t\t\tvar stage = await private_message.methods.stage().call()\r\n\t\t\tvar alice = await private_message.methods.alice().call()\r\n\t\t\tvar bob = await private_message.methods.bob().call()\r\n      var message = {stage:stage,alice:alice,bob:bob, id:index}\r\n      if(stage==1){\r\n      }\r\n      if (stage == \"2\"){\r\n        var bob_public = await private_message.methods.bob_public().call()\r\n        message['bob_public']=bob_public\r\n      }\r\n      message['address']=private_message_addr\r\n      message['id'] = index;\r\n      messages.push(message);\r\n    }\r\n    this.setState({sentMessages: messages})\r\n    return messages;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n      { \r\n        this.state.sentMessages.map(message => \r\n          <EncryptMessage message={message} key={message.id}/>\r\n        )\r\n      }\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport {getContract, contract, w3, users_address, getPrivateMessage, getBlockNumber} from \"./Web3Helper\"\r\nimport EncryptMessage from './EncryptMessage'\r\nimport Convo from './Convo'\r\n\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport default class StartConversation extends React.Component {\r\n  async setUpListeners(){\r\n    var that = this;\r\n    contract.events.allEvents(\"allEvents\",{\r\n        fromBlock: 'latest'\r\n\r\n    },async function(err,data){\r\n      console.log(\"LOGGING THAT EVENT PICKED UP NEWS\")\r\n      await that.getSentMessages();\r\n    });\r\n  }\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: '',\r\n      sentMessages : [],\r\n      errormessage: '',\r\n      account:''\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n\t\tconsole.log(\"start send private msg\");\r\n    await this.setUpListeners();\r\n    const response = await this.getSentMessages()\r\n  }\r\n  async getSentMessages() {\r\n    var account = await  w3.eth.getAccounts()\r\n    this.state.account = account;\r\n    var messages_count = await contract.methods.get_sent_messages_total(users_address).call();\r\n    var messages = this.state.sentMessages\r\n    var show_once_alice = { account:true}\r\n    var show_once_bob = {account:true}\r\n    for(var index = messages_count-1; index >= 0 ;index-- ){\r\n      var private_message_addr = await contract.methods.get_sent_message(users_address,index).call()\r\n\t\t\tvar private_message = getPrivateMessage(private_message_addr)\r\n\t\t\tvar stage = await private_message.methods.stage().call()\r\n\t\t\tvar alice = await private_message.methods.alice().call()\r\n\t\t\tvar bob = await private_message.methods.bob().call()\r\n      var message = {stage:stage,alice:alice,bob:bob, id:index}\r\n      if (stage == \"2\"){\r\n        continue\r\n      }\r\n      message['address']='address'\r\n      message['id'] = index;\r\n      if(stage==1){\r\n      }\r\n      if((show_once_alice[message['alice']]&&show_once_bob[message['bob']])||false){continue;}\r\n      messages.push(message);\r\n      show_once_alice[message['alice']]=true;\r\n      show_once_bob[message['bob']]=true;\r\n    }\r\n    this.setState({sentMessages: messages})\r\n    return messages;\r\n  };\r\n  mySubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    var account = await  w3.eth.getAccounts()\r\n    var send = await contract.methods.pm_init(this.state.address).send({gasPrice:0,from:account[0]});\r\n    return false;\r\n  }\r\n\r\n  myChangeHandler = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    let err = '';\r\n    if (nam === \"message\") {\r\n      if (val ==\"\" ) {\r\n        err = <strong>Your message can't be blank</strong>;\r\n      }\r\n    }\r\n    this.setState({errormessage: err});\r\n    this.setState({[nam]: val});\r\n  }\r\n  render() {\r\n    return (\r\n        <div>\r\n        { this.state.sentMessages.map(message => \r\n      <Convo message={message} key={message.id}/>\r\n          \r\n          )\r\n        }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n","\r\nimport React from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport ecies from 'eth-ecies'\r\nimport {getContract, contract, w3, users_address, getPrivateMessage, getBlockNumber } from \"./Web3Helper\"\r\nimport StartConversation from \"./StartConversation\"\r\n\r\nexport default class Conversations extends React.Component {\r\n\r\n  myChangeHandler = (event) => {\r\n    this.setState({address: event.target.value});\r\n  }\r\n\r\n  async mySubmitHandler(props, event){\r\n    event.preventDefault();\r\n    var account = await  w3.eth.getAccounts()\r\n    var send = await contract.methods.pm_init(props.address).send({gasPrice:0,from:account[0]});\r\n    return false;\r\n  }\r\n  render(){\r\n  return (\r\n    <div>\r\n    <div>\r\n          <Panel bsStyle=\"info\" className=\"centeralign\">\r\n            <Panel.Heading>\r\n              <Panel.Title componentClass=\"h3\">\r\n                Start a new Conversation\r\n\t\t\t\t\t\t</Panel.Title>\r\n            </Panel.Heading>\r\n            <Panel.Body >\r\n              <form onSubmit={(event)=>this.mySubmitHandler(this.state, event)}>\r\n              <div>\r\n                <label htmlFor=\"address\">Ethereum Address</label>\r\n                <input\r\n                  type='text'\r\n                  name='address'\r\n                  placeholder=\"0xSatoshi\"\r\n                  onChange={this.myChangeHandler}\r\n                />\r\n              </div>\r\n              <div>\r\n                <input\r\n                  type='submit'\r\n                  value='Start'\r\n                />\r\n              </div>\r\n              </form>\r\n            </Panel.Body>\r\n          </Panel>\r\n\r\n\r\n\r\n      <StartConversation/>\r\n    </div>\r\n    </div>\r\n  )\r\n  }\r\n}\r\n","import React, { Component, useState, useEffect } from \"react\";\r\n\r\n\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport { getContract, contract, w3, users_address, getPrivateMessage, getBlockNumber, getSentMessages } from \"./Web3Helper\"\r\nimport EncryptMessage from './EncryptMessage'\r\n\r\n\r\nexport default (props) => {\r\n    const [messages, setMessages] = useState([]);\r\n    useEffect(() => {\r\n        contract.events.allEvents(\"allEvents\", {\r\n            fromBlock: 'latest'\r\n        }, async function (err, data) {\r\n            console.log('')\r\n            await fetch();\r\n        });\r\n\r\n\r\n        fetch().then(function () {\r\n\r\n        })\r\n    }, []);\r\n\r\n\r\n    async function fetch() {\r\n        const messages = await getSentMessages();\r\n        setMessages(messages)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {  messages.map((message) =>\r\n                <EncryptMessage message={message} key={message.id} />\r\n\r\n            )}\r\n            <input type=\"submit\" onClick={getSentMessages} />\r\n\r\n            <input type=\"submit\" value='fetch' onClick={fetch} />\r\n\r\n        </div>\r\n    );\r\n};\r\n","import React, { Component } from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport Button from 'react-bootstrap/lib/Button'\r\nimport CustomerDetails from './CustomerDetails'\r\nimport SendPublicMessage from \"./SendPublicMessage\"\r\nimport PublicMessages from \"./PublicMessages\"\r\nimport SendPrivateMessage from './SendPrivateMessage'\r\nimport Messages from './Messages'\r\nimport ReceivedMessages from './ReceivedMessages'\r\nimport Conversations from './Conversations'\r\nimport NewSendMessage from \"./NewSendMessage\"\r\n\r\n\r\nimport { getContract, contract, web3init } from \"./Web3Helper\"\r\n\r\nexport default class Arts extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      networkname: 'private'\r\n    }\r\n  }\r\n\r\n  //function which is called the first time the component loads\r\n  async componentDidMount() {\r\n    var did_init = await web3init();\r\n    if (did_init) {\r\n      var networkname = await window.w3.eth.net.getNetworkType();\r\n      this.setState({ 'networkname': networkname })\r\n\r\n      const response = await this.getPublicMessages()\r\n      console.log('response is ', response);\r\n      this.setState({ publicMessages: { \"data\": response } })\r\n    } else {\r\n      this.setState({ networkname: 'no-web3' })\r\n    }\r\n\r\n  }\r\n\r\n  //Function to get the Art Data from json\r\n  async getPublicMessages() {\r\n    if (this.state.networkname != 'private') {\r\n      return {};\r\n    }\r\n    var messages_count = await contract.methods.get_public_message_count().call();\r\n\r\n    console.log(\"messages count\", messages_count);\r\n    var messages = []\r\n    var counter = 0;\r\n    for (var index = messages_count - 1; index >= 0; index--) {\r\n      counter += 1;\r\n      if (counter == 5) { break; }\r\n      console.log(\"index is\", index)\r\n      var message = await contract.methods.get_public_message_message(index).call()\r\n      var sender = await contract.methods.get_public_message_sender(index).call()\r\n      messages.push({ message: message, sender: sender, id: index })\r\n    }\r\n    return messages;\r\n\r\n  };\r\n\r\n  render() {\r\n    if (this.state.networkname == 'no-web3') {\r\n      return (<div><h1>\r\n\r\n        <a href=\"https://metamask.io\" target=\"_blank\">\r\n          Install MetaMask to use the site\r\n      </a>\r\n        <a className=\"cover\" href=\"https://metamask.io\" target=\"_blank\">\r\n          <img src=\"/assets/images/download-extension.png\" />\r\n        </a>\r\n\r\n      </h1>\r\n      </div>)\r\n    }\r\n    if (this.state.networkname != 'private') {\r\n      return (<div>\r\n        <h1>Metamask is on the wrong network </h1>\r\n        <h1>Switch to MaticV3</h1>\r\n        <h2>Add new RPC URL:</h2>\r\n        <h4 className=\"App-subtitle\">  <br />https://testnetv3.matic.network/ </h4>\r\n        <img className=\"metamask\" src=\"/assets/images/metamask_change.png\" />\r\n        <img className=\"metamask\" src=\"/assets/images/metamask_example.png\" />\r\n        <img className=\"metamask\" src=\"/assets/images/metamask_settings.png\" />\r\n      </div>)\r\n    }\r\n    if (!this.state.publicMessages) {\r\n      return (<p>Loading data</p>)\r\n    }\r\n    return (<div className=\"addmargin\">\r\n      <div className=\"col-md-3\">\r\n        <div>\r\n          <SendPublicMessage />\r\n          <PublicMessages />\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-3\">\r\n        <div>\r\n          <h2>Encrypted Conversations</h2>\r\n          <Conversations />\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        <div className=\"row\">\r\n          <Messages />\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n          <div className=\"col-md-6\">\r\n            <p>Outgoing Secure Messages</p>\r\n            <NewSendMessage />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <p>Incoming Secure Messages</p>\r\n            <ReceivedMessages />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>)\r\n  }\r\n\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Txtrs from './Txtrs'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n\r\n    return (\r\n\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <h1 className=\"App-title\">Txt.rs.2.4.1</h1>\r\n          <a href=\"https://github.com/snissn/txtrs-react\" target=\"_blank\" className=\"github-corner\" aria-label=\"View source on GitHub\"><svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" className=\"github1\" aria-hidden=\"true\"><path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path><path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" className=\"octo-arm github2\"></path><path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" className=\"octo-body\"></path></svg></a>\r\n          <Route exact path='/' component={Txtrs} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n","import React from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport { getContract, contract, w3, users_address, getPrivateMessage, colorHash, contrast } from \"./Web3Helper\"\r\n\r\nimport ReactDOM from 'react-dom';\r\nconst ecies = require('eth-ecies')\r\n\r\nexport default class EncryptMessage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    console.log(\"PROPS\", props);\r\n    this.state = {\r\n      secret_message: \"\"\r\n\r\n    };\r\n    this.onSendSecretMessage = this.onSendSecretMessage.bind(this);\r\n\r\n  }\r\n  async componentDidMount() {\r\n  }\r\n  onSendSecretMessage = async (event) => {\r\n    event.preventDefault();\r\n    var private_message = getPrivateMessage(this.props.message.address)\r\n    // the damn library adds the \"0x04\" prevailing byte so we need to slice(2) the hex rep\r\n    //https://github.com/libertylocked/eth-ecies/blob/master/index.js#L74\r\n    var bob_public = this.props.message.bob_public;\r\n    var public_key = Buffer.from(bob_public.slice(2), 'hex');\r\n    var account = await w3.eth.getAccounts()\r\n    var encrypt = ecies.encrypt(public_key, this.state.secret_message);\r\n    var contract = getContract();\r\n    var send = await contract.methods.pm_alice_send_encrypted_message(this.props.message.address, encrypt.toString('hex')).send({ gasPrice: 0, from: account[0] });\r\n    return false;\r\n  }\r\n\r\n  myChangeHandler = (event) => {\r\n    this.setState({ secret_message: event.target.value });\r\n\r\n    return;\r\n  }\r\n  render() {\r\n    var message = this.props.message;\r\n    console.log(\"MESSAGE\", message);\r\n    return (\r\n      <Panel bsStyle=\"info\" key={message.id} className=\"centeralign\">\r\n        <Panel.Heading>\r\n          <Panel.Title componentClass=\"h3\">\r\n            {(() => {\r\n              switch (message.stage) {\r\n                case \"1\": return \"Key request sent.\";\r\n                case \"2\": return \"Encrypted Channel\";\r\n                case \"3\": return \"Encrypted Message sent to \" + message.bob;\r\n                case \"4\": return \"Encrypted Message received by \" + message.bob;\r\n                default: return \"unknown stage \";\r\n              }\r\n            })()}\r\n          </Panel.Title>\r\n        </Panel.Heading>\r\n        <Panel.Body style={{ backgroundColor: colorHash.hex(message.bob), color: contrast(colorHash.hex(message.bob)) }}>\r\n          {this.renderForm(message)}\r\n        </Panel.Body>\r\n      </Panel>\r\n    )\r\n  }\r\n  renderForm(message) {\r\n    if (message.stage == '2') {\r\n      return (\r\n        <form onSubmit={this.onSendSecretMessage} className=\"form\">\r\n          <label htmlFor=\"Receiver\">Receiver</label>\r\n          <div name=\"Receiver\">{message.bob}</div>\r\n          <label htmlFor=\"message\">Secret Message</label>\r\n          <input\r\n            type='text'\r\n            name='message'\r\n            placeholder=\"Secret Message\"\r\n            value={this.state.secret_message}\r\n            onChange={this.myChangeHandler}\r\n          />\r\n          <input\r\n            type='submit'\r\n            value=\"Send\"\r\n          />\r\n        </form>\r\n      )\r\n    }\r\n    if (message.stage == '1') {\r\n      return (<span>Conversation with {message.bob} requsted </span>)\r\n    }\r\n    return (<span>Message Sent</span>)\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}