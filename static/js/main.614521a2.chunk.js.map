{"version":3,"sources":["Web3Helper.js","ReceivedMessages.js","AcceptMessageButton.js","SecretMessage.js","Convo.js","logo.svg","CustomerDetails.js","SendPublicMessage.js","StartConversationButton.js","PublicMessages.js","SendPrivateMessage.js","Messages.js","StartConversation.js","Conversations.js","Txtrs.js","App.js","registerServiceWorker.js","index.js","EncryptMessage.js"],"names":["console","log","abi_private_message","users_address","EC","require","ec","w3","Web3","window","ethereum","contract","eth","Contract","abi","getPrivateMessage","addr","getBlockNumber","private_message_bob_stage_2","_x","_private_message_bob_stage_","apply","this","arguments","_callee","private_message_addr","privateKey","ephemPrivKey","ephemPubKey","pub_key_readable","accounts","private_message","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","utils","randomHex","keyFromPrivate","getPublic","Buffer","from","encode","toString","db","localStorage","setItem","getAccounts","sent","enable","methods","bob_reply","send","gasPrice","stop","contrast","colorHex","threshold","length","undefined","_ref","rgb","hex","result","exec","r","parseInt","g","b","hexToRgb","colorHash","web3init","_web3init","_callee2","account","_context2","options","rec_state","ReceivedMessages","props","_this","Object","_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","state","receivedMessages","errormessage","keys","message","getPrivateMessages","response","setState","setUpListeners","fetch","that","events","allEvents","fromBlock","_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee3","err","data","_context3","_x2","get_received_messages_total","messages_count","messages","index","get_received_message","stage","plaintext","alice","bob","bob_public","encrypted_message","ethPrivKey","pub","slice","ecies","encrypt","pk","decrypt","e","id","address","push","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","map","react_bootstrap_lib_Panel__WEBPACK_IMPORTED_MODULE_8___default","bsStyle","key","className","Heading","Title","componentClass","Body","style","backgroundColor","color","_AcceptMessageButton__WEBPACK_IMPORTED_MODULE_11__","_SecretMessage__WEBPACK_IMPORTED_MODULE_12__","React","Component","AcceptMessageButton","_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_5___default","type","value","onClick","event","handleClick","Fragment","SecretMessage","Convo","_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","onSendSecretMessage","_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","public_key","preventDefault","secret_message","alice_send_encrypted_message","abrupt","myChangeHandler","target","bind","_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__","react__WEBPACK_IMPORTED_MODULE_9___default","react_bootstrap_lib_Panel__WEBPACK_IMPORTED_MODULE_10___default","module","exports","__webpack_require__","p","SendPublicMessage","classCallCheck","possibleConstructorReturn","getPrototypeOf","mySubmitHandler","asyncToGenerator","regenerator_default","send_public_message","nam","name","val","react_default","defineProperty","Panel_default","onSubmit","onChange","StartConversationButton","pm_init","PublicMessages","publicMessages","getPublicMessages","get_public_message_count","get_public_message_message","get_public_message_sender","sender","StartConversationButton_StartConversationButton","sentMessages","block_number","toBlock","getSentMessages","get_sent_messages_total","get_sent_message","EncryptMessage","Messages","StartConversation","_ref2","_x3","show_once_alice","show_once_bob","Conversations","htmlFor","placeholder","StartConversation_StartConversation","Arts","counter","SendPublicMessage_SendPublicMessage","PublicMessages_PublicMessages","Conversations_Conversations","Messages_Messages","SendPrivateMessage_SendPublicMessage","App","BrowserRouter","basename","process","href","Route","exact","path","component","Txtrs","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","concat","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","renderForm"],"mappings":"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","file":"static/js/main.614521a2.chunk.js","sourcesContent":["import Web3 from 'web3'\r\n\r\n\r\nimport abi from './abi_txtrs.json'\r\nimport abi_private_message from './abi_private_message.json'\r\nconsole.log(abi_private_message);\r\n\r\nconst EC = require(\"elliptic\").ec;\r\nconst ec = new EC(\"secp256k1\");\r\nexport var w3 = new Web3(window.ethereum);\r\nvar contract_address = \"0xA1d3AC64638Fd91c8a5aFD43747749403fcC2D99\";\r\n  \r\nexport var users_address;\r\n\r\nwindow.w3 = w3;\r\n\r\nexport const  contract =  new w3.eth.Contract(abi, contract_address);\r\n\r\nexport function getContract(){\r\n  return contract; \r\n}\r\nexport function getPrivateMessage(addr){\r\n\treturn  new w3.eth.Contract(abi_private_message, addr);\r\n}\r\nexport function getBlockNumber(addr){\r\n\treturn  new w3.eth.getBlockNumber();\r\n}\r\n\r\nexport async function private_message_bob_stage_2(private_message_addr){\r\n\r\n  var privateKey = w3.utils.randomHex(32)\r\n  const ec = new EC(\"secp256k1\");\r\n  const ephemPrivKey = ec.keyFromPrivate(privateKey);\r\n  const ephemPubKey = ephemPrivKey.getPublic();\r\n  const ephemPubKeyEncoded = Buffer.from(ephemPubKey.encode());\r\n  const pub_key_readable = Buffer.from(ephemPubKey.encode()).toString('hex')\r\n\r\n\r\n  window.db[pub_key_readable] = privateKey\r\n  console.log('window.db',window.db);\r\n  window.localStorage.setItem(pub_key_readable, privateKey);\r\n  \r\n\r\n  var accounts = await  w3.eth.getAccounts()\r\n  await window.ethereum.enable()\r\n  var private_message = getPrivateMessage(private_message_addr)\r\n  var send = await private_message.methods.bob_reply(pub_key_readable).send({gasPrice:0,from:accounts[0]})\r\n\r\n}\r\n  function hexToRgb(hex) {\r\n    if (!hex || hex === undefined || hex === '') {\r\n      return undefined;\r\n    }\r\n\r\n    const result =\r\n          /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n    return result ? {\r\n      r: parseInt(result[1], 16),\r\n      g: parseInt(result[2], 16),\r\n      b: parseInt(result[3], 16)\r\n    } : undefined;\r\n  }\r\n  function rgbToYIQ({r, g, b}) {\r\n    return ((r * 299) + (g * 587) + (b * 114)) / 1000;\r\n  }\r\n\r\nexport function contrast(colorHex: string | undefined,\r\n                         threshold: number = 128): string {\r\n    if (colorHex === undefined) {\r\n        return '#000';\r\n    }\r\n\r\n    const rgb: RGB | undefined = hexToRgb(colorHex);\r\n\r\n    if (rgb === undefined) {\r\n        return '#000';\r\n    }\r\n\r\n    return rgbToYIQ(rgb) >= threshold ? '#000' : '#fff';\r\n}\r\n\r\nvar ColorHash = require('color-hash');\r\nexport var colorHash = new ColorHash();\r\n\r\nexport async function web3init(){\r\n  await window.ethereum.enable();//'https://rpc.goerli.mudit.blog/');\r\n  var account = await  w3.eth.getAccounts()\r\n  contract.options.from=account[0]\r\n\tusers_address = account[0];\r\n}\r\n\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/lib/Button'\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport ecies from 'eth-ecies'\r\nimport {getContract, contract, w3, users_address, getPrivateMessage, getBlockNumber, private_message_bob_stage_2} from \"./Web3Helper\"\r\nimport {colorHash, contrast} from \"./Web3Helper\"\r\nimport AcceptMessageButton from './AcceptMessageButton'\r\nimport SecretMessage from './SecretMessage'\r\n\r\n\r\n\r\n\r\n\r\nwindow.db = {}\r\nwindow.rec_state = {}\r\n\r\n\r\nconst EC = require(\"elliptic\").ec;\r\n\r\nexport default class ReceivedMessages extends React.Component {\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      receivedMessages: [],\r\n      errormessage: '',\r\n      keys:{},\r\n\t\t\tmessage:undefined\r\n    };\r\n\r\n  }\r\n  \r\n  async fetch(){\r\n    const response = await this.getPrivateMessages()\r\n    this.setState({receivedMessages: response})\r\n  }\r\n  async componentDidMount() {\r\n    await this.setUpListeners();\r\n    await this.fetch();\r\n    window.rec_state = this.state\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  async setUpListeners(){\r\n    var block_number = await getBlockNumber()\r\n    var that = this;\r\n    contract.events.allEvents(\"allEvents\",{\r\n    \r\n        fromBlock: 'latest'\r\n\r\n    },async function(err,data){\r\n      console.log(\"event\", data);\r\n      await that.fetch();\r\n    });\r\n  }\r\n\r\n  async getPrivateMessages() {\r\n\r\n      //set up listeners for new received messages\r\n\r\n\r\n\r\n\r\n\r\n    var messages_count = await contract.methods.get_received_messages_total(users_address).call();\r\n    var messages = []\r\n    for(var index = messages_count-1; index >= 0 ;index-- ){\r\n      var private_message_addr = await contract.methods.get_received_message(users_address,index).call()\r\n\t\t\tvar private_message = getPrivateMessage(private_message_addr)\r\n\r\n\r\n\r\n\r\n\t\t\tvar stage = await private_message.methods.stage().call()\r\n      var plaintext=''\r\n\t\t\tvar alice = await private_message.methods.alice().call()\r\n\t\t\tvar bob = await private_message.methods.bob().call()\r\n\t\t\tvar bob_public = await private_message.methods.bob_public().call()\r\n      var encrypted_message = await private_message.methods.encrypted_message().call()\r\n\r\n      if (stage == \"1\"){\r\n        //private_message_bob_stage_2(private_message); // TODO remove\r\n      }\r\n      if(stage == \"3\"){\r\n        //decrypt using bob eey\r\n        const ec = new EC(\"secp256k1\");\r\n        var pub_key_readable = Buffer.from(bob_public,'hex').toString(\"hex\");\r\n        console.log('should be same kesy bob',bob_public, pub_key_readable)\r\n        var ethPrivKey = window.localStorage[pub_key_readable];\r\n        if(ethPrivKey){\r\n          //try to encrypt and then decrypt (?)\r\n          var pub = Buffer.from(pub_key_readable.slice(2),'hex');\r\n          var encrypt = ecies.encrypt(pub, 'test');\r\n          var pk = ec.keyFromPrivate(ethPrivKey)\r\n          try{\r\n          plaintext = ecies.decrypt(pk , Buffer.from(encrypted_message,'hex')).toString();// XXX REAL ONE\r\n          }catch (e){\r\n          console.log(e);\r\n          }\r\n\r\n          console.log('plaintext2',plaintext);\r\n        }\r\n\r\n      }\r\n\r\n    var message = {plaintext:plaintext,stage:stage,alice:alice,bob:bob, id:index, address: private_message_addr, encrypted_message:encrypted_message, bob_public:bob_public }\r\n      messages.push(message);\r\n\r\n      //var sender = await contract.methods.get_public_message_sender(index).call()\r\n    }\r\n    return messages;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n<div>\r\n        { \r\n\r\n\t\t\t\tthis.state.receivedMessages.map(message => \r\n          <Panel bsStyle=\"info\" key={message.id} className=\"centeralign\">\r\n            <Panel.Heading>\r\n              <Panel.Title componentClass=\"h3\">\r\n\t\t\t\t\t\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tswitch (message.stage) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase \"1\":   return \"Incoming Conversation request\";\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase \"2\": return \"Waiting on recieving encrypted message \";\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase \"3\":  return \"Encrypted Message received\" ;\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase \"4\":  return \"Encrypted Message received and status = Read\";\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:      return \"unknown stage \";\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})()}\r\n\t\t\t\t\t\t</Panel.Title>\r\n            </Panel.Heading>\r\n            <Panel.Body style={{backgroundColor:colorHash.hex(message.alice), color:contrast(colorHash.hex(message.alice))}}>\r\n            <p>\r\n        {(() => {\r\n          switch (message.stage) {\r\n            case \"1\": return \"incoming message request from \" + message.alice ;\r\n            case \"2\": return \"Waiting on an encrypted message from \" + message.alice;\r\n            case \"3\": return \"Secure message from \" + message.alice;\r\n            default: return message.alice;\r\n            }\r\n            })()}\r\n            </p>\r\n            <AcceptMessageButton account={message.address} stage={message.stage} />\r\n            <SecretMessage message={message} />\r\n            </Panel.Body>\r\n          </Panel>)\r\n        }\r\n</div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","\r\nimport React from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport {getContract, contract, w3, users_address, getPrivateMessage, private_message_bob_stage_2} from \"./Web3Helper\"\r\n\r\nimport ReactDOM from 'react-dom';\r\nconst ecies = require('eth-ecies')\r\n\r\nexport default class AcceptMessageButton extends React.Component {\r\n\tconstructor(props) {\r\n    super(props);\r\n  }\r\n  handleClick(props){\r\n    console.log(props.account)\r\n    var private_message = getPrivateMessage(props.account)\r\n    console.log(private_message);\r\n\t\tprivate_message_bob_stage_2(props.account);\r\n  }\r\n  render(){\r\n  if (this.props.stage==1){\r\n    return (<div><p>{this.props.account}</p><input type=\"button\" style={{color:'black'}} value=\"Accept Conversation\" onClick={(event)=>this.handleClick(this.props)}/></div>)\r\n  }\r\n  else{\r\n    return (<></>)\r\n  }\r\n  }\r\n}\r\n","\r\nimport React from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport {getContract, contract, w3, users_address, getPrivateMessage, private_message_bob_stage_2} from \"./Web3Helper\"\r\n\r\nimport ReactDOM from 'react-dom';\r\nconst ecies = require('eth-ecies')\r\n\r\nexport default class SecretMessage extends React.Component {\r\n\tconstructor(props) {\r\n    super(props);\r\n  }\r\n  render(){\r\n  if (this.props.message.stage==3){\r\n    return ( <div><p>{this.props.message.plaintext}</p></div>);\r\n  }\r\n  else{\r\n    return (<></>)\r\n  }\r\n  }\r\n}\r\n\r\n","import React from 'react';\nimport Panel from 'react-bootstrap/lib/Panel'\nimport {getContract, contract, w3, users_address, getPrivateMessage, colorHash, contrast} from \"./Web3Helper\"\n\nimport ReactDOM from 'react-dom';\nconst ecies = require('eth-ecies')\n\nexport default class Convo extends React.Component {\n\tconstructor(props) {\n    super(props);\n    console.log(\"PROPS\",props);\n    this.state = {\n      message: props.message,\n      errormessage: props.message\n    };\n    this.onSendSecretMessage = this.onSendSecretMessage.bind(this);\n\n  }\n  async componentDidMount() {\n  }\n  onSendSecretMessage = async (event) => {\n    event.preventDefault();\n    var private_message = getPrivateMessage(this.state.message.address)\n    // the damn library adds the \"0x04\" prevailing byte so we need to slice(2) the hex rep\n    //https://github.com/libertylocked/eth-ecies/blob/master/index.js#L74\n    var bob_public = this.state.message.bob_public;\n    var public_key = Buffer.from( bob_public.slice(2),'hex');\n    var account = await  w3.eth.getAccounts()\n    var encrypt = ecies.encrypt(public_key, this.state.secret_message);\n    var send = await private_message.methods.alice_send_encrypted_message(encrypt.toString('hex')).send({gasPrice:0,from:account[0]});\n    return false;\n  }\n\n  myChangeHandler = (event) => {\n    this.setState({secret_message: event.target.value});\n\n    return;\n    let nam = event.target.name;\n    let val = event.target.value;\n    let err = '';\n    if (nam === \"message\") {\n      if (val ==\"\" ) {\n        err = <strong>Your message can't be blank</strong>;\n      }\n    }\n    this.setState({errormessage: err});\n    this.setState({[nam]: val});\n  }\n  render() {\n            var message = this.state.message;\n            console.log(\"MESSAGE\",message);\n            return(\n<Panel bsStyle=\"info\" key={message.id} className=\"centeralign\">\n            <Panel.Heading>\n              <Panel.Title componentClass=\"h3\">\n\t\t\t\t\t\t\t\t\t\t{(() => {\n\t\t\t\t\t\t\t\t\t\t\tswitch (message.stage) {\n\t\t\t\t\t\t\t\t\t\t\t\tcase \"1\":   return \"Key request sent.\";\n\t\t\t\t\t\t\t\t\t\t\t\tcase \"2\": return \"Recipient has shared one time use encryption keys with you. Time to encrypt and send the message!\";\n\t\t\t\t\t\t\t\t\t\t\t\tcase \"3\":  return \"Conversation #\"+message.id\n\t\t\t\t\t\t\t\t\t\t\t\tcase \"4\":  return \"Encrypted Message received by \"+message.bob;\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:      return \"unknown stage \";\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})()}\n\t\t\t\t\t\t</Panel.Title>\n            </Panel.Heading>\n            <Panel.Body style={{backgroundColor:colorHash.hex(message.bob), color:contrast(colorHash.hex(message.bob))}}>\n            \n            <div>\n                  <p>\n                    conversation wtih\n                  </p>\n                  <p>\n                    {message.bob}\n                  </p>\n                  <p>\n                    {message.id} total messages\n                  </p>\n\n            </div>\n\n\n            </Panel.Body>\n          </Panel>\n          )\n  }\n}\n\n\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, {Component} from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport axios from 'axios'\r\n\r\n//This Component is a child Component of Customers Component\r\nexport default class CustomerDetails extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {}\r\n  }\r\n\r\n  //Function which is called when the component loads for the first time\r\n  componentDidMount() {\r\n    this.getCustomerDetails(this.props.val)\r\n  }\r\n\r\n  //Function which is called whenver the component is updated\r\n  componentDidUpdate(prevProps) {\r\n\r\n    //get Customer Details only if props has changed\r\n    if (this.props.val !== prevProps.val) {\r\n      this.getCustomerDetails(this.props.val)\r\n    }\r\n  }\r\n\r\n  //Function to Load the customerdetails data from json.\r\n  getCustomerDetails(id) {\r\n    axios.get('assets/samplejson/customer' + id + '.json').then(response => {\r\n      this.setState({customerDetails: response})\r\n    })\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.customerDetails)\r\n      return (<p>Loading Data</p>)\r\n    return (<div className=\"customerdetails\">\r\n      <Panel bsStyle=\"info\" className=\"centeralign\">\r\n        <Panel.Heading>\r\n          <Panel.Title componentClass=\"h3\">{this.state.customerDetails.data.name}</Panel.Title>\r\n        </Panel.Heading>\r\n        <Panel.Body>\r\n          <p>Name : {this.state.customerDetails.data.name}</p>\r\n          <p>Email : {this.state.customerDetails.data.email}</p>\r\n          <p>Phone : {this.state.customerDetails.data.phone}</p>\r\n          <p>City : {this.state.customerDetails.data.city}</p>\r\n          <p>State : {this.state.customerDetails.data.state}</p>\r\n          <p>Country : {this.state.customerDetails.data.country}</p>\r\n          <p>Organization : {this.state.customerDetails.data.organization}</p>\r\n          <p>Job Profile : {this.state.customerDetails.data.jobProfile}</p>\r\n          <p>Additional Info : {this.state.customerDetails.data.additionalInfo}</p>\r\n        </Panel.Body>\r\n      </Panel>\r\n    </div>)\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\n\r\nimport {getContract, contract, w3, colorHash, contrast} from \"./Web3Helper\"\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport default class SendPublicMessage extends React.Component {\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: '',\r\n      errormessage: '',\r\n      account:''\r\n    };\r\n  }\r\n  async componentDidMount(){\r\n    var account = await  w3.eth.getAccounts()\r\n    this.setState({account:account})\r\n  }\r\n  mySubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    var account = await  w3.eth.getAccounts()\r\n\r\n    var send = await contract.methods.send_public_message(this.state.message).send();//, {from:account}).send({from:account, value:0})\r\n    return false;\r\n  }\r\n\r\n  myChangeHandler = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    let err = '';\r\n    if (nam === \"message\") {\r\n      if (val ==\"\" ) {\r\n        err = <strong>Your message can't be blank</strong>;\r\n      }\r\n    }\r\n    this.setState({errormessage: err});\r\n    this.setState({[nam]: val});\r\n  }\r\n  render() {\r\n    return (\r\n          <Panel bsStyle=\"info\" className=\"centeralign\">\r\n            <Panel.Heading>\r\n              <Panel.Title componentClass=\"h3\">\r\n              Send Public Message\r\n\r\n\t\t\t\t\t\t</Panel.Title>\r\n            </Panel.Heading>\r\n            <Panel.Body style={{backgroundColor:colorHash.hex(this.state.account)}} >\r\n              <form onSubmit={this.mySubmitHandler}>\r\n              <input\r\n                type='text'\r\n                name='message'\r\n                onChange={this.myChangeHandler}\r\n              />\r\n              <input\r\n                type='submit'\r\n                value='Share'\r\n              />\r\n         \r\n              {this.state.errormessage}\r\n              </form>\r\n            </Panel.Body>\r\n          </Panel>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n","\nimport React from 'react';\nimport Panel from 'react-bootstrap/lib/Panel'\nimport {getContract, contract, w3, users_address, getPrivateMessage, private_message_bob_stage_2} from \"./Web3Helper\"\n\nimport ReactDOM from 'react-dom';\nconst ecies = require('eth-ecies')\n\nexport default class StartConversationButton extends React.Component {\n\tconstructor(props) {\n    super(props);\n  }\n  async handleClick(props){\n\n    var account = await  w3.eth.getAccounts()\n    var send = await contract.methods.pm_init(this.props.address).send({gasPrice:0,from:account[0]});\n    return false;\n  }\n  render(){\n      return (<div>\n        <p>{this.props.account}</p>\n        <input type=\"button\" value=\"Start a secret conversation\" onClick={(event)=>this.handleClick(this.props)}/>\n      </div>)\n  }\n\n\n}\n","import React from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport ecies from 'eth-ecies'\r\n\r\n//import {getContract, contract, w3, users_address, getPrivateMessage, getBlockNumber} from \"./Web3Helper\"\r\nimport StartConversationButton from './StartConversationButton'\r\n\r\n\r\nimport {w3,getContract, contract, web3init, getBlockNumber, colorHash, contrast} from \"./Web3Helper\"\r\n\r\nconst blendstyle = {\r\n            color:'white'\r\n}\r\n\r\nexport default class PublicMessages extends React.Component {\r\n  \r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      publicMessages:{\r\n        data: []\r\n      },\r\n      account:''\r\n    };\r\n  }\r\n  \r\n  async setUpListeners(){\r\n    var block_number = await getBlockNumber()\r\n    var that = this;\r\n    contract.events.allEvents(\"allEvents\",{\r\n    \r\n        fromBlock: 'latest'\r\n\r\n    },async function(err,data){\r\n      console.log(\"event\", data);\r\n      await that.fetch();\r\n    });\r\n  }\r\n\r\n\r\n  async fetch(){\r\n    var account = await  w3.eth.getAccounts()\r\n    const response = await this.getPublicMessages()\r\n    this.setState({publicMessages: {\"data\":response}, account:account})\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.fetch()\r\n    await this.setUpListeners();\r\n  }\r\n\r\n  async getPublicMessages() {\r\n    var messages_count = await contract.methods.get_public_message_count().call();\r\n    var messages = []\r\n    for(var index = messages_count-1; index >= 0 ;index-- ){\r\n      var message = await contract.methods.get_public_message_message(index).call()\r\n      var sender = await contract.methods.get_public_message_sender(index).call()\r\n      messages.push({message:message, sender:sender, id:index})\r\n    }\r\n    return messages;\r\n  };\r\n\r\n\r\n  render(){\r\n          const elements = ['a','b','c'];\r\n        return (\r\n          <div>\r\n          {\r\n          this.state.publicMessages.data.map((message,index) => <Panel bsStyle=\"info\" key={message.id} className=\"centeralign\">\r\n            <Panel.Heading>\r\n              <Panel.Title componentClass=\"h3\">{message.sender}</Panel.Title>\r\n            </Panel.Heading>\r\n            <Panel.Body style={{backgroundColor:colorHash.hex(message.sender)}}>\r\n              <p style={{color:contrast(colorHash.hex(message.sender))}}>\r\n              {message.message}</p>\r\n              <div> <StartConversationButton  address={message.sender}/></div>\r\n            </Panel.Body>\r\n          </Panel>)\r\n        \r\n          }\r\n        </div>\r\n        )\r\n\r\n\r\n  }\r\n  }\r\n","import React from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport {getContract, contract, w3, users_address, getPrivateMessage, getBlockNumber} from \"./Web3Helper\"\r\nimport EncryptMessage from './EncryptMessage'\r\n\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport default class SendPublicMessage extends React.Component {\r\n  async setUpListeners(){\r\n    var block_number = await getBlockNumber()\r\n    var that = this;\r\n    contract.events.allEvents(\"allEvents\",{\r\n    \r\n        fromBlock: block_number,\r\n        toBlock: 'latest'\r\n\r\n    },async function(err,data){\r\n      console.log(\"LOGGING THAT EVENT PICKED UP NEWS\")\r\n      await that.getSentMessages();\r\n    });\r\n  }\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: '',\r\n      sentMessages : [],\r\n      errormessage: '',\r\n      account:''\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n\t\tconsole.log(\"start send private msg\");\r\n    await this.setUpListeners();\r\n    const response = await this.getSentMessages()\r\n    console.log('send messages response is ',response);\r\n  }\r\n  async getSentMessages() {\r\n    var account = await  w3.eth.getAccounts()\r\n    this.state.account = account;\r\n    var messages_count = await contract.methods.get_sent_messages_total(users_address).call();\r\n    var messages = []\r\n    for(var index = messages_count-1; index >= 0 ;index-- ){\r\n      var private_message_addr = await contract.methods.get_sent_message(users_address,index).call()\r\n\t\t\tvar private_message = getPrivateMessage(private_message_addr)\r\n\t\t\tvar stage = await private_message.methods.stage().call()\r\n\t\t\tvar alice = await private_message.methods.alice().call()\r\n\t\t\tvar bob = await private_message.methods.bob().call()\r\n      var message = {stage:stage,alice:alice,bob:bob, id:index}\r\n      if(stage==1){\r\n      }\r\n      if (stage == \"2\"){\r\n        var bob_public = await private_message.methods.bob_public().call()\r\n        message['bob_public']=bob_public\r\n      }\r\n      message['address']=private_message_addr\r\n      message['id'] = index;\r\n      messages.push(message);\r\n    }\r\n    this.setState({sentMessages: messages})\r\n    return messages;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n      { \r\n        this.state.sentMessages.map(message => \r\n          <EncryptMessage message={message} key={message.id}/>\r\n        )\r\n      }\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport {getContract, contract, w3, users_address, getPrivateMessage, getBlockNumber} from \"./Web3Helper\"\r\nimport EncryptMessage from './EncryptMessage'\r\n\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nexport default class Messages extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n    <div><h2>Active Conversation here </h2></div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport {getContract, contract, w3, users_address, getPrivateMessage, getBlockNumber} from \"./Web3Helper\"\r\nimport EncryptMessage from './EncryptMessage'\r\nimport Convo from './Convo'\r\n\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport default class StartConversation extends React.Component {\r\n  async setUpListeners(){\r\n    var block_number = await getBlockNumber()\r\n    var that = this;\r\n    contract.events.allEvents(\"allEvents\",{\r\n    \r\n        fromBlock: block_number,\r\n        toBlock: 'latest'\r\n\r\n    },async function(err,data){\r\n      console.log(\"LOGGING THAT EVENT PICKED UP NEWS\")\r\n      await that.getSentMessages();\r\n    });\r\n  }\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: '',\r\n      sentMessages : [],\r\n      errormessage: '',\r\n      account:''\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n\t\tconsole.log(\"start send private msg\");\r\n    await this.setUpListeners();\r\n    const response = await this.getSentMessages()\r\n  }\r\n  async getSentMessages() {\r\n    var account = await  w3.eth.getAccounts()\r\n    this.state.account = account;\r\n    var messages_count = await contract.methods.get_sent_messages_total(users_address).call();\r\n    var messages = this.state.sentMessages\r\n    var show_once_alice = { account:true}\r\n    var show_once_bob = {account:true}\r\n    for(var index = messages_count-1; index >= 0 ;index-- ){\r\n      var private_message_addr = await contract.methods.get_sent_message(users_address,index).call()\r\n\t\t\tvar private_message = getPrivateMessage(private_message_addr)\r\n\t\t\tvar stage = await private_message.methods.stage().call()\r\n\t\t\tvar alice = await private_message.methods.alice().call()\r\n\t\t\tvar bob = await private_message.methods.bob().call()\r\n      var message = {stage:stage,alice:alice,bob:bob, id:index}\r\n      if (stage == \"2\"){\r\n        continue\r\n      }\r\n      message['address']='address'\r\n      message['id'] = index;\r\n      if(stage==1){\r\n      }\r\n      if((show_once_alice[message['alice']]&&show_once_bob[message['bob']])||false){continue;}\r\n      messages.push(message);\r\n      show_once_alice[message['alice']]=true;\r\n      show_once_bob[message['bob']]=true;\r\n    }\r\n    this.setState({sentMessages: messages})\r\n    return messages;\r\n  };\r\n  mySubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    var account = await  w3.eth.getAccounts()\r\n    var send = await contract.methods.pm_init(this.state.address).send({gasPrice:0,from:account[0]});\r\n    return false;\r\n  }\r\n\r\n  myChangeHandler = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    let err = '';\r\n    if (nam === \"message\") {\r\n      if (val ==\"\" ) {\r\n        err = <strong>Your message can't be blank</strong>;\r\n      }\r\n    }\r\n    this.setState({errormessage: err});\r\n    this.setState({[nam]: val});\r\n  }\r\n  render() {\r\n    return (\r\n        <div>\r\n        { this.state.sentMessages.map(message => \r\n      <Convo message={message} key={message.id}/>\r\n          \r\n          )\r\n        }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n","\nimport React from 'react';\nimport Panel from 'react-bootstrap/lib/Panel'\nimport ecies from 'eth-ecies'\nimport {getContract, contract, w3, users_address, getPrivateMessage, getBlockNumber } from \"./Web3Helper\"\nimport StartConversation from \"./StartConversation\"\n\nexport default class Conversations extends React.Component {\n  render(){\n  return (\n    <div>\n    <div>\n      <h4>Start a new conversation</h4>\n\n          <Panel bsStyle=\"info\" className=\"centeralign\">\n            <Panel.Heading>\n              <Panel.Title componentClass=\"h3\">\n          Start a new Conversation\n\n\t\t\t\t\t\t</Panel.Title>\n            </Panel.Heading>\n            <Panel.Body >\n              <form onSubmit={this.mySubmitHandler}>\n              <div>\n                <label htmlFor=\"address\">Ethereum Address</label>\n                <input\n                  type='text'\n                  name='address'\n                  placeholder=\"0xSatoshi\"\n                  onChange={this.myChangeHandler}\n                />\n              </div>\n              <div>\n                <input\n                  type='submit'\n                  value='Start'\n                />\n              </div>\n              </form>\n            </Panel.Body>\n          </Panel>\n\n\n\n      <StartConversation/>\n    </div>\n    </div>\n  )\n  }\n}\n","import React, {Component} from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport Button from 'react-bootstrap/lib/Button'\r\nimport CustomerDetails from './CustomerDetails'\r\nimport SendPublicMessage from \"./SendPublicMessage\"\r\nimport PublicMessages from \"./PublicMessages\"\r\nimport SendPrivateMessage from './SendPrivateMessage'\r\nimport Messages from './Messages'\r\nimport ReceivedMessages from './ReceivedMessages'\r\nimport Conversations from './Conversations'\r\n\r\nimport {getContract, contract, web3init} from \"./Web3Helper\"\r\n\r\nexport default class Arts extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  //function which is called the first time the component loads\r\n  async componentDidMount() {\r\n    await web3init();\r\n\r\n    const response = await this.getPublicMessages()\r\n    console.log('response is ',response);\r\n    this.setState({publicMessages: {\"data\":response}})\r\n  }\r\n\r\n  //Function to get the Art Data from json\r\n  async getPublicMessages() {\r\n    var messages_count = await contract.methods.get_public_message_count().call();\r\n    console.log(\"messages count\", messages_count);\r\n    var messages = []\r\n    var counter=0;\r\n    for(var index = messages_count-1; index >= 0 ;index-- ){\r\n      counter+=1;\r\n      if(counter ==5){break;}\r\n      console.log(\"index is\", index)\r\n      var message = await contract.methods.get_public_message_message(index).call()\r\n      var sender = await contract.methods.get_public_message_sender(index).call()\r\n      messages.push({message:message, sender:sender, id:index})\r\n    }\r\n    return messages;\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.publicMessages)\r\n      return (<p>Loading data</p>)\r\n    return (<div className=\"addmargin\">\r\n      <div className=\"col-md-3\">\r\n        <div>\r\n          <SendPublicMessage />\r\n          <PublicMessages />\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-3\">\r\n        <div>\r\n        <h2>Encrypted Conversations</h2>\r\n        <Conversations />\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n      <div className=\"row\">\r\n        <Messages />\r\n      </div>\r\n      <div className=\"col-md-12\">\r\n        <div className=\"col-md-6\">\r\n          <p>Send Private Message</p>\r\n          <SendPrivateMessage />\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <p>Incoming Private Messages</p>\r\n          <ReceivedMessages />\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>)\r\n  }\r\n\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Txtrs from './Txtrs'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    console.log(\"Host URL\"+process.env.PUBLIC_URL);\r\n    return (\r\n\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1 className=\"App-title\">Txt.rs.2.2</h1>\r\n          <h3 className=\"App-subtitle\">Connect <a href=\"http://metamask.io\" target=\"_blank\">Metamask.io</a> to the MaticV3 testnet</h3>\r\n          <h4 className=\"App-subtitle\"> https://testnetv3.matic.network/ </h4> \r\n        </header>\r\n       <Route exact path='/' component={Txtrs} />\r\n      </div>\r\n    </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n","import React from 'react';\r\nimport Panel from 'react-bootstrap/lib/Panel'\r\nimport {getContract, contract, w3, users_address, getPrivateMessage,colorHash, contrast} from \"./Web3Helper\"\r\n\r\nimport ReactDOM from 'react-dom';\r\nconst ecies = require('eth-ecies')\r\n\r\nexport default class EncryptMessage extends React.Component {\r\n\tconstructor(props) {\r\n    super(props);\r\n    console.log(\"PROPS\",props);\r\n    this.state = {\r\n      message: props.message,\r\n      errormessage: props.message\r\n    };\r\n    this.onSendSecretMessage = this.onSendSecretMessage.bind(this);\r\n\r\n  }\r\n  async componentDidMount() {\r\n  }\r\n  onSendSecretMessage = async (event) => {\r\n    event.preventDefault();\r\n    var private_message = getPrivateMessage(this.state.message.address)\r\n    // the damn library adds the \"0x04\" prevailing byte so we need to slice(2) the hex rep\r\n    //https://github.com/libertylocked/eth-ecies/blob/master/index.js#L74\r\n    var bob_public = this.state.message.bob_public;\r\n    var public_key = Buffer.from( bob_public.slice(2),'hex');\r\n    var account = await  w3.eth.getAccounts()\r\n    var encrypt = ecies.encrypt(public_key, this.state.secret_message);\r\n    var send = await private_message.methods.alice_send_encrypted_message(encrypt.toString('hex')).send({gasPrice:0,from:account[0]});\r\n    return false;\r\n  }\r\n\r\n  myChangeHandler = (event) => {\r\n    this.setState({secret_message: event.target.value});\r\n\r\n    return;\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    let err = '';\r\n    if (nam === \"message\") {\r\n      if (val ==\"\" ) {\r\n        err = <strong>Your message can't be blank</strong>;\r\n      }\r\n    }\r\n    this.setState({errormessage: err});\r\n    this.setState({[nam]: val});\r\n  }\r\n  render() {\r\n            var message = this.state.message;\r\n            console.log(\"MESSAGE\",message);\r\n            return(\r\n<Panel bsStyle=\"info\" key={message.id} className=\"centeralign\">\r\n            <Panel.Heading>\r\n              <Panel.Title componentClass=\"h3\">\r\n\t\t\t\t\t\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tswitch (message.stage) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase \"1\":   return \"Key request sent.\";\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase \"2\": return \"Encrypted Channel\";\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase \"3\":  return \"Encrypted Message sent to \"+message.bob;\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase \"4\":  return \"Encrypted Message received by \"+message.bob;\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:      return \"unknown stage \";\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})()}\r\n\t\t\t\t\t\t</Panel.Title>\r\n            </Panel.Heading>\r\n            <Panel.Body style={{backgroundColor:colorHash.hex(message.bob), color:contrast(colorHash.hex(message.bob))}}>\r\n              {this.renderForm(message)}\r\n            </Panel.Body>\r\n          </Panel>\r\n          )\r\n  }\r\n  renderForm(message){\r\n    if(message.stage=='2'){\r\n      return (\r\n        <form onSubmit={this.onSendSecretMessage}>\r\n          <label htmlFor=\"Receiver\">Receiver</label>\r\n          <div name=\"Receiver\">{message.bob}</div>\r\n          <label htmlFor=\"message\">Secret Message</label>\r\n          <input\r\n            type='text'\r\n            name='message'\r\n            placeholder=\"Secret Message\"\r\n            value={this.state.secret_message}\r\n            onChange={this.myChangeHandler}\r\n          />\r\n          <input\r\n            type='submit'\r\n          />\r\n        </form>\r\n      )\r\n    }\r\n    if(message.stage=='1'){\r\n      return (<span>Conversation with {message.bob} requsted </span>)\r\n    }\r\n    return (<span>Message Sent</span>)\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}